A list of features needed to fulfil ISO 10206 standard. This is by no
means a FULL list of features, but rather a list of things that I
think can be added with relative ease.

The existance of this document is by no means a promise of ISO 10206
functionality appearing anytime soon (or ever).

Constants:
   Array and struct constant declarations

Types:
   complex
   Restricted types (Opaque types for modules) [supported by parser]

Variables:
   Value initializers.

Functions
   DateStamp

   { string functions }
   substr(s, i)
   EQ(s1, s2)
   LT(s1, s2)
   GT(s1, s2)
   NE(s1, s2)
   LE(s1, s2)
   GE(s1, s2)

   succ(x, k), pred(x, k)


   writestr(s, p1, ..., pn)   { kinda like sprintf }
   readstr(e, v1, ..., vn)  { kinda like sscanf }

   empty(f)   { true if file f is empty }
   position(f)
   lastposition(f)

Modules

   New keywords:
     "module", "export", "import", "interface", "implementation", "qualified"
