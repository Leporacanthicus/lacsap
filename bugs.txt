This document lists known bugs (outside of missing features and bugs listed in README)

Bug 1:
Date: 01-Mar-2015

The char type is dealt with as a signed value.

Resolved: Fixed by adding support for unsigned.
Fix in: 8a34cd3fc47dae1613f9b94759cb097ec0a60a02
----------------------------------------------------------------
Bug 2:
Date: 01-Mar-2015

For loop for char from chr(0) to chr(127) goes past 127.
Resolved: Fixed by moving the end value comparison before the increment.
Fix in: 8a34cd3fc47dae1613f9b94759cb097ec0a60a02
----------------------------------------------------------------
Bug3:
Date: 09-Mar-2015

Enum values can't be used to array declarations, e.g. 
type
   e = (Mon, Tue, Wed, Thu, Fri, Sat, Sun);
   a =  array [Mon..Sun] of integer;

Workaround: 
   a =  array [e] of integer;

Resolved: Fixed the parsing of array ranges.
Fix in: 68549927d33765c7b74f6d97ce9fab60aeb49ed5
----------------------------------------------------------------
Bug4:
Date: 10-Mar-2015

Function returning string can not be passed directly to write.

E.g. write("Executable=", paramstr(0));
Resolved: Added call to "MakeAddressable" in WrtieAST::CodeGen.
Fix in: 78d825566b899b6a32f7f7e3dfb80742a513f46d
----------------------------------------------------------------
Bug5:
Date: 17-Jun-2015

dhry.pas doesn't compile. 
----------------------------------------------------------------
Bug6:
Date: 17-Jun-2015

schedule.pas doesn't compile.
----------------------------------------------------------------
Bug7:
Date: 28-Jun-2015

Superfluous "begin .. end" should be parsed correctly.
E.g. 
  if x = y then begin
    begin
       ... 
    end
  end;
----------------------------------------------------------------
Bug8:
Date: 28-Jun-2015

Forward declared functions/procedures without repeating arguments/return type.

e.g. 
function fw(x : integer) : real; 
... 
function fw;
begin
   fw := x * 7.0;
end;
----------------------------------------------------------------
Bug9:
Date: 16-Jul-2015

Set using negative range doesn't work.

The negative start value is seen as a huge positive number, and the type becomes
int64 which doesn't provide a "range".
----------------------------------------------------------------
